<?php

use Moota\Moota\Config\Moota;

class WC_Moota_Bank_Transfer extends WC_Payment_Gateway {
	private $bank_selection = [];

	public function __construct() {
		$this->id                 = 'moota-bank-transfer';
		$this->has_fields         = true;
		$this->method_title       = 'Bank Transfer';
		$this->method_description = 'Terima Pembayaran langsung ke masuk kerekening tanpa biaya per-transaksi. Mendukung Banyak Bank Nasional';

		$this->init_form_fields();

		$this->init_settings();

		// Populate Values settings
		$this->enabled     = $this->get_option( 'enabled' );
		$this->title       = $this->get_option( 'title' );
		$this->description = $this->get_option( 'description' );

		add_action( 'woocommerce_update_options_payment_gateways_' . $this->id, [
			$this,
			'process_admin_options'
		] );


		// custom fields
		add_filter( 'woocommerce_generate_bank_lists_html', [ $this, 'bank_lists_bank' ], 99, 4 );
		add_filter( 'woocommerce_settings_api_sanitized_fields_' . $this->id, function ( $settings ) {
			return $settings;
		} );
	}

	public function init_form_fields() {
		$this->form_fields = array(
			'enabled' => array(
				'title'   => __( 'Enable/Disable', 'woocommerce-gateway-moota' ),
				'type'    => 'checkbox',
				'label'   => __( 'Aktifkan Moota Transaksi', 'woocommerce-gateway-moota' ),
				'default' => 'yes'
			),

			'title'              => array(
				'title'       => __( 'Title', 'woocommerce-gateway-moota' ),
				'type'        => 'text',
				'description' => __( 'Nama Yang Muncul Di halaman Checkout', 'woocommerce-gateway-moota' ),
				'default'     => __( 'Moota Bank Transfer', 'woocommerce-gateway-moota' ),
				'desc_tip'    => true,
			),
			'description'        => array(
				'title'       => __( 'Deskripsi', 'woocommerce-gateway-moota' ),
				'type'        => 'textarea',
				'description' => 'Penjelasan akan muncul di halaman checkout',
				'default'     => '',
				'desc_tip'    => true,
			),
			'bank_account_title' => array(
				'title'       => __( 'Pengaturan Pembayaran', 'woocommerce-gateway-moota' ),
				'type'        => 'title',
				'description' => 'Pilih Akun Bank Yang akan ditampilkan halaman pembayaran',
			),
			'toggle_status'      => array(
				'title'       => __( 'Nomor Unik?', 'woocommerce-gateway-moota' ),
				'type'        => 'checkbox',
				'description' => __( 'Centang, untuk aktifkan fitur penambahan 3 angka unik di setiap akhir pesanan / order. Sebagai pembeda dari order satu dengan yang lainnya.', 'woocommerce-gateway-moota' ),
				'desc_tip'    => true,
			),
			'type_append'        => array(
				'title'       => __( 'Tipe Tambahan', 'woocommerce-gateway-moota' ),
				'type'        => 'select',
				'description' => __( 'Increase = Menambah unik number ke total harga, Decrease = Mengurangi total harga dengan unik number', 'woocommerce-gateway-moota' ),
				'default'     => 'increase',
				'desc_tip'    => true,
				'options'     => array(
					'increase' => 'Tambahkan',
					'decrease' => 'Kurangi'
				),
				'id'          => 'woomoota_type_append'
			),
			'unique_start'       => array(
				'title'             => __( 'Batas Awal Angka Unik', 'woocommerce-gateway-moota' ),
				'type'              => 'number',
				'description'       => __( 'Masukan batas awal angka unik', 'woocommerce-gateway-moota' ),
				'id'                => 'woomoota_start_unique_number',
				'default'           => 1,
				'custom_attributes' => array(
					'min' => 0,
					'max' => 99999
				),
				'desc_tip'          => true,
			),
			'unique_end'         => array(
				'title'             => __( 'Batas Akhir Angka Unik', 'woocommerce-gateway-moota' ),
				'type'              => 'number',
				'description'       => __( 'Masukan batas akhir angka unik', 'woocommerce-gateway-moota' ),
				'id'                => 'woomoota_end_unique_number',
				'default'           => 999,
				'custom_attributes' => array(
					'min' => 0,
					'max' => 99999
				),
				'desc_tip'          => true,
			),
			'bank_lists'         => array(
				'title'       => __( 'Daftar Bank', 'woocommerce-gateway-moota' ),
				'type'        => 'bank_lists',
				'description' => __( 'Pilih Bank yang ingin digunakan', 'woocommerce-gateway-moota' ),
				'id'          => 'woomoota_bank_list',
			),
		);
	}

	public function init_settings() {
		parent::init_settings(); // TODO: Change the autogenerated stub
	}

	// Custom fields for check list bank
	public function bank_lists_bank( $html, $k, $v, $object ) {
		ob_start();
		$field_key       = $object->get_field_key( $k );
		$banks           = $this->get_option( 'moota-bank-lists', [] );

		?>
        </table>
        <h3 class="wc-settings-sub-title "
            id="woocommerce_moota-bank-transfer_bank_account_<?php echo $v['id']; ?>>"><?php echo $v['title']; ?></h3>
		<?php if ( ! empty( $v['description'] ) ) : ?>
            <p><?php echo $v['description']; ?></p>
		<?php endif; ?>
        <table class="form-table">
		<?php if ( is_array( $banks ) ) : ?>
			<?php foreach ( $banks as $item ) :
				$field_key_bank = $item->bank_type . '_' . $item->bank_id;
				$checked = $this->bank_lists_checked( $k, $field_key_bank, $item->bank_id );
				?>
                <tr valign="top">
                    <th scope="row" class="titledesc">
                        <label for="<?php echo esc_attr( $field_key ); ?>"><?php echo wp_kses_post( $item->label . ' ' . $item->account_number . ' (' . $item->atas_nama . ')' ); ?></label>
                    </th>
                    <td class="forminp">
                        <fieldset>
                            <legend class="screen-reader-text"><span><?php echo wp_kses_post( $item->label ); ?></span>
                            </legend>
                            <input type="checkbox" name="<?php echo $field_key; ?>[<?php echo $field_key_bank; ?>]"
                                   id="<?php echo $field_key . '_' . $item->bank_id; ?>"
                                   value="<?php echo $item->bank_id; ?>" <?php echo $checked ? "checked" : ""; ?>/>
                        </fieldset>
                    </td>
                </tr>

			<?php endforeach; ?>
		<?php endif; ?>


		<?php

		return ob_get_clean();
	}

	// Custom Validate
	public function validate_bank_lists_field( $key, $value ) {
		return $value;
	}

	// handle selection bank
	private function bank_lists_checked( $k, $field_key, $value ): bool {
		if ( empty( $this->bank_selection ) ) {
			$this->bank_selection = $this->get_option( $k );
		}

		return ! empty( $this->bank_selection[ $field_key ] ) && $this->bank_selection[ $field_key ] == $value;
	}

	/**
	 * Handle WooCommerce Checkout
	 */
	private function bank_selection( $bank_id ) {
		$bank_selection = [];

		return $bank_selection;
	}

	public function payment_fields() {
		/**
		 * $banks = $this->settings['bank_lists'];
		 * ?>
		 * <ul>
		 * <?php if ( ! empty( $banks ) ) :
		 * foreach ( $banks as $item ) :
		 * $bank_selection = $this->bank_selection($item);
		 * ?>
		 * <li>
		 * <label for="bank-transfer-<?php echo $bank_selection->bank_type; ?> bank-id-<?php echo $item; ?>">
		 * <input id="bank-transfer-bank-id-<?php echo $item; ?>" name="channels" type="radio"
		 * value="<?php echo $item; ?>">
		 * <span><img src="<?php echo $bank_selection->icon;?>" alt="<?php echo $bank_selection->bank_type; ?>"></span>
		 * <span class="moota-bank-account"><?php echo $bank_selection->label; ?> <?php echo $bank_selection->account_number; ?> An. (<?php echo $bank_selection->atas_nama; ?>)</span>
		 * </label>
		 * </li>
		 * <?php endforeach;
		 * endif; ?>
		 * </ul>
		 * <?php
		 * $description = $this->get_description();
		 * if ( $description ) {
		 * echo wpautop( wptexturize( $description ) ); // @codingStandardsIgnoreLine.
		 * }
		 */
	}

	public function validate_fields() {
		if ( empty( $_POST['channels'] ) ) {
			wc_add_notice( '<strong>Channel Pembayaran</strong> Pilih Channel Pembayaran', 'error' );

			return false;
		}

		return true;
	}

	public function process_payment( $order_id ) {
		global $woocommerce;
		$order = new WC_Order( $order_id );
		$order->update_meta_data( 'moota_channels', $_POST['channels'] );

		$args = [
			'invoice_number'                  => $order->get_order_number(),
			'amount'                          => $order->get_total(),
			'payment_method_id'               => '',
			'payment_method_type'             => '',
			'callback_url'                    => '',
			'increase_total_from_unique_code' => 1,
			'expired_date'                    => '',
			'customer'                        => [
				'name'  => $order->get_billing_first_name() . ' class.moota-gateway-sandbox.php' . $order->get_billing_last_name(),
				'email' => $order->get_billing_email(),
				'phone' => $order->get_billing_phone()
			],
			'items'                           => collect( $order->get_items() )->flatMap( function ( $item ) {
				return [
					'name'      => $item->get_name(),
					'qty'       => $item->get_quantity(),
					'price'     => $item->get_price(),
					'sku'       => $item->get_sku(),
					'image_url' => ''
				];
			} )->toArray()
		];

		die();
		$response = wp_remote_post( '{payment processor endpoint}', $args );

		// Mark as on-hold (we're awaiting the cheque)
		$order->update_status( 'on-hold', __( 'Awaiting Payment', 'woocommerce-gateway-moota' ) );

		// Remove cart
		$woocommerce->cart->empty_cart();

		// Return thankyou redirect
		return array(
			'result'   => 'success',
			'redirect' => $this->get_return_url( $order )
		);
	}
}